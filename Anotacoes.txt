1 Introdução ---> 1

	1.1 Abordagem tradicional ---> 2
	1.2 Uma abordagem alternativa: DevOps e entrega contínua ---> 4
	1.3 Sobre o livro ---> 6

2 Tudo começa em produção ---> 11

	2.1 Nossa aplicação de exemplo: a loja virtual ---> 12

		http://www.broadleafcommerce.org/
		https://github.com/dtsato/loja-virtual-devops/
		http://java.oracle.com/
		http://www.springframework.org/
		http://www.hibernate.org/
		http://developers.google.com/web-toolkit/
		http://lucene.apache.org/solr/
		http://tomcat.apache.org/
		http://www.mysql.com/

	2.2 Instalando o ambiente de produção ---> 15

		http://www.vagrantup.com
		http://www.virtualbox.org
		http://www.virtualbox.org/wiki/Downloads
		http://www.vagrantup.com/downloads.html
		http://www.vagrantbox.es/ (Boxes para baixar)
		https://vagrantcloud.com/

		$ vagrant box add hashicorp/precise32

		Criando o arquivo inicial Vagrantfile
		Criado a configuracoes iniciais atraves do Vagrantfile e iniciado as maquinas com o comando >> 
			$ vagrant up


	2.3 Configurando dependências nos servidores de produção ---> 20

		Configurando as dependencia do servidor bd

			vagrant@db$ sudo apt-get update
			vagrant@db$ sudo apt-get install mysql-server

			Criar um arquivo de configuracao do mysql com o comando 
				vagrant@db$ sudo nano /etc/mysql/conf.d/allow_external.cnf

				e conteudo .:
				[mysqld]
					bind-address = 0.0.0.0

			depois reiniciar o serviço do mysql
				vagrant@db$ sudo service mysql restart

			Criaçao do db e apos verificando se ocorreu tudo bem >>
				vagrant@db$ mysqladmin -u root -p create loja_schema
				vagrant@db$ mysql -u root -p -e "SHOW DATABASES"

			Remover a conta anonima do mysql >>
				vagrant@db$ mysql -u root -p -e "DELETE FROM mysql.user WHERE user=''; FLUSH PRIVILEGES"

			Criar um usuario loja com a senha lojasecret >>
				vagrant@db$ mysql -u root -p -e "GRANT ALL PRIVILEGES ON loja_schema.* TO 'loja'@'%' IDENTIFIED BY 'lojasecret';"

			Testando se o usuario foi criado corretamente >>
				vagrant@db$ mysql -u loja -p loja_schema -e "select database(), user()"

		Servidor web

			Instalando o tomcat >>
				vagrant@web$ sudo apt-get update
				vagrant@web$ sudo apt-get install tomcat7 mysql-client

			Criando uma conexao ssl com keytools
				vagrant@web$ cd /var/lib/tomcat7/conf
				vagrant@web$ sudo keytool -genkey -alias tomcat -keyalg RSA -keystore .keystore

			Configurando o tomcat para utilizar o ssl detalhes pg 26-27
				vagrant@web$ sudo nano /var/lib/tomcat7/conf/server.xml

			Aumentando a memoria do tomcat 
				vagrant@web$ sudo nano /etc/default/tomcat7
					JAVA_OPTS="-Djava.awt.headless=true -Xmx512M -XX:+UseConcMarkSweepGC"

			e reiniciar o tomcat
				vagrant@web$ sudo service tomcat7 restart

	2.4 Build e deploy da aplicação ---> 28

		Instalando no servidor web algumas ferramentas necessarias
			vagrant@web$ sudo apt-get install git maven2 openjdk-6-jdk

		Depois baixamos o codigo do Github e executaremos o build rodando o maven
			vagrant@web$ cd
			vagrant@web$ git clone https://github.com/dtsato/loja-virtual-devops.git
				...
				...
			vagrant@web$ cd loja-virtual-devops
			vagrant@web$ export MAVEN_OPTS=-Xmx256m
			vagrant@web$ mvn install
				...
				...




